<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModelContextProtocol.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationDefaults">
            <summary>
            Default values used by MCP authentication.
            </summary>
        </member>
        <member name="F:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationDefaults.AuthenticationScheme">
            <summary>
            The default value used for authentication scheme name.
            </summary>
        </member>
        <member name="F:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationDefaults.DisplayName">
            <summary>
            The default value used for authentication scheme display name.
            </summary>
        </member>
        <member name="T:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationEvents">
            <summary>
            Represents the authentication events for Model Context Protocol.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationEvents.OnResourceMetadataRequest">
            <summary>
            Gets or sets the function that is invoked when resource metadata is requested.
            </summary>
            <remarks>
            This function is called when a resource metadata request is made to the protected resource metadata endpoint.
            The implementer should set the <see cref="P:ModelContextProtocol.AspNetCore.Authentication.ResourceMetadataRequestContext.ResourceMetadata"/> property
            to provide the appropriate metadata for the current request.
            </remarks>
        </member>
        <member name="T:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler">
            <summary>
            Authentication handler for MCP protocol that adds resource metadata to challenge responses
            and handles resource metadata endpoint requests.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler"/> class.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler.HandleRequestAsync">
            <inheritdoc />
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler.GetBaseUrl">
            <summary>
            Gets the base URL from the current request, including scheme, host, and path base.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler.GetAbsoluteResourceMetadataUri">
            <summary>
            Gets the absolute URI for the resource metadata endpoint.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler.HandleAuthenticateAsync">
            <inheritdoc />
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationHandler.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <inheritdoc />
        </member>
        <member name="T:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions">
            <summary>
            Options for the MCP authentication handler.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions"/> class.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions.Events">
            <summary>
            Gets or sets the events used to handle authentication events.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions.ResourceMetadataUri">
            <summary>
            The URI to the resource metadata document.
            </summary>
            <remarks>
            This URI will be included in the WWW-Authenticate header when a 401 response is returned.
            </remarks>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions.ResourceMetadata">
            <summary>
            Gets or sets the protected resource metadata.
            </summary>
            <remarks>
            This contains the OAuth metadata for the protected resource, including authorization servers,
            supported scopes, and other information needed for clients to authenticate.
            </remarks>
        </member>
        <member name="T:ModelContextProtocol.AspNetCore.Authentication.ResourceMetadataRequestContext">
            <summary>
            Context for resource metadata request events.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Authentication.ResourceMetadataRequestContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ModelContextProtocol.AspNetCore.Authentication.ResourceMetadataRequestContext"/> class.
            </summary>
            <param name="context">The HTTP context.</param>
            <param name="scheme">The authentication scheme.</param>
            <param name="options">The authentication options.</param>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Authentication.ResourceMetadataRequestContext.ResourceMetadata">
            <summary>
            Gets or sets the protected resource metadata for the current request.
            </summary>
        </member>
        <member name="T:ModelContextProtocol.AspNetCore.HttpServerTransportOptions">
            <summary>
            Configuration options for <see cref="M:McpEndpointRouteBuilderExtensions.MapMcp"/>.
            which implements the Streaming HTTP transport for the Model Context Protocol.
            See the protocol specification for details on the Streamable HTTP transport. <see href="https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#streamable-http"/>
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.ConfigureSessionOptions">
            <summary>
            Gets or sets an optional asynchronous callback to configure per-session <see cref="T:ModelContextProtocol.Server.McpServerOptions"/>
            with access to the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> of the request that initiated the session.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.RunSessionHandler">
            <summary>
            Gets or sets an optional asynchronous callback for running new MCP sessions manually.
            This is useful for running logic before a sessions starts and after it completes.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.Stateless">
            <summary>
            Gets or sets whether the server should run in a stateless mode that does not require all requests for a given session
            to arrive to the same ASP.NET Core application process.
            </summary>
            <remarks>
            If <see langword="true"/>, the "/sse" endpoint will be disabled, and client information will be round-tripped as part
            of the "MCP-Session-Id" header instead of stored in memory. Unsolicited server-to-client messages and all server-to-client
            requests are also unsupported, because any responses may arrive at another ASP.NET Core application process.
            Client sampling and roots capabilities are also disabled in stateless mode, because the server cannot make requests.
            Defaults to <see langword="false"/>.
            </remarks>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.PerSessionExecutionContext">
            <summary>
            Gets or sets whether the server should use a single execution context for the entire session.
            If <see langword="false"/>, handlers like tools get called with the <see cref="T:System.Threading.ExecutionContext"/>
            belonging to the corresponding HTTP request which can change throughout the MCP session.
            If <see langword="true"/>, handlers will get called with the same <see cref="T:System.Threading.ExecutionContext"/>
            used to call <see cref="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.ConfigureSessionOptions" /> and <see cref="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.RunSessionHandler"/>.
            </summary>
            <remarks>
            Enabling a per-session <see cref="T:System.Threading.ExecutionContext"/> can be useful for setting <see cref="T:System.Threading.AsyncLocal`1"/> variables
            that persist for the entire session, but it prevents you from using IHttpContextAccessor in handlers.
            Defaults to <see langword="false"/>.
            </remarks>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.IdleTimeout">
            <summary>
            Gets or sets the duration of time the server will wait between any active requests before timing out an MCP session.
            </summary>
            <remarks>
            This is checked in background every 5 seconds. A client trying to resume a session will receive a 404 status code
            and should restart their session. A client can keep their session open by keeping a GET request open.
            Defaults to 2 hours.
            </remarks>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.MaxIdleSessionCount">
            <summary>
            Gets or sets maximum number of idle sessions to track in memory. This is used to limit the number of sessions that can be idle at once.
            </summary>
            <remarks>
            Past this limit, the server will log a critical error and terminate the oldest idle sessions even if they have not reached
            their <see cref="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.IdleTimeout"/> until the idle session count is below this limit. Clients that keep their session open by
            keeping a GET request open will not count towards this limit.
            Defaults to 100,000 sessions.
            </remarks>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.TimeProvider">
            <summary>
            Used for testing the <see cref="P:ModelContextProtocol.AspNetCore.HttpServerTransportOptions.IdleTimeout"/>.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.StatelessSessionId">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.UserIdClaim">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.Implementation">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ModelContextProtocol.AspNetCore.Stateless.StatelessSessionIdJsonContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.McpAuthenticationExtensions">
            <summary>
            Extension methods for adding MCP authorization support to ASP.NET Core applications.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.McpAuthenticationExtensions.AddMcp(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions})">
            <summary>
            Adds MCP authorization support to the application.
            </summary>
            <param name="builder">The authentication builder.</param>
            <param name="configureOptions">An action to configure MCP authentication options.</param>
            <returns>The authentication builder for chaining.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.McpAuthenticationExtensions.AddMcp(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{ModelContextProtocol.AspNetCore.Authentication.McpAuthenticationOptions})">
            <summary>
            Adds MCP authorization support to the application with a custom scheme name.
            </summary>
            <param name="builder">The authentication builder.</param>
            <param name="authenticationScheme">The authentication scheme name to use.</param>
            <param name="displayName">The display name for the authentication scheme.</param>
            <param name="configureOptions">An action to configure MCP authentication options.</param>
            <returns>The authentication builder for chaining.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.HttpMcpServerBuilderExtensions">
            <summary>
            Provides methods for configuring HTTP MCP servers via dependency injection.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.HttpMcpServerBuilderExtensions.WithHttpTransport(Microsoft.Extensions.DependencyInjection.IMcpServerBuilder,System.Action{ModelContextProtocol.AspNetCore.HttpServerTransportOptions})">
            <summary>
            Adds the services necessary for <see cref="M:McpEndpointRouteBuilderExtensions.MapMcp"/>
            to handle MCP requests and sessions using the MCP Streamable HTTP transport. For more information on configuring the underlying HTTP server
            to control things like port binding custom TLS certificates, see the <see href="https://learn.microsoft.com/aspnet/core/fundamentals/minimal-apis">Minimal APIs quick reference</see>.
            </summary>
            <param name="builder">The builder instance.</param>
            <param name="configureOptions">Configures options for the Streamable HTTP transport. This allows configuring per-session
            <see cref="T:ModelContextProtocol.Server.McpServerOptions"/> and running logic before and after a session.</param>
            <returns>The builder provided in <paramref name="builder"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="builder"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.AuthenticationFailureException">
            <summary>A generic authentication failure.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.AuthenticationFailureException.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationFailureException" />
            with the specified exception <paramref name="message" />.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.AuthenticationFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationFailureException" />
            with the specified exception <paramref name="message" /> and
            a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <see langword="null" />.</param>
        </member>
    </members>
</doc>
